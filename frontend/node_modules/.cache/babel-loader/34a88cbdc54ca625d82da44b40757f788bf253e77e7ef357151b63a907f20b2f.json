{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\OffCampus1\\\\K Rite innovation\\\\frontend\\\\src\\\\Component\\\\Screen\\\\Filters\\\\BrandInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { productArray } from '../../../action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\nexport default function MultipleSelectPlaceholder(props) {\n  _s();\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n  // console.log(props.names)\n  const names = props.names;\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  const [data, setData] = useState([]);\n  console.log(personName);\n  useEffect(() => {\n    const fetchData = () => {\n      try {\n        const response2 = axios.get(\"https://dummyjson.com/products?skip=1&limit=100\").then(response => {\n          // Access the data from the response\n          const data = response.data;\n\n          // Now you can work with the data\n          console.log(data);\n\n          // Return the data if needed\n          setData([...data.products]);\n          return data.products;\n        });\n        //   setData2([...response2])\n        // console.log(data2)\n      } catch (error) {\n        console.log(\"error in fetching data\");\n      }\n    };\n    fetchData();\n  }, []);\n  function filterProductsByCategory(products, selectedCategory) {\n    // Use Array.filter to filter products based on the selected category\n    const filteredProducts = products.filter(product => product.brand === selectedCategory);\n    // console.log(products)\n\n    // console.log(selectedCategory)\n\n    // console.log(filteredProducts)\n    if (selectedCategory === \"undefined\") {\n      return products;\n    } else {\n      return filteredProducts;\n    }\n  }\n  var filteredProducts;\n  if (personName.length === 0) {\n    filteredProducts = data;\n  } else {\n    filteredProducts = filterProductsByCategory(data, personName[0]);\n  }\n\n  // console.log(filteredProducts);\n  dispatch(productArray(filteredProducts));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 350,\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        single: true,\n        displayEmpty: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 22\n            }, this);\n          }\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSelectPlaceholder, \"KDaVGvEdu7XIU2MRofnh/WbJ13Q=\", false, function () {\n  return [useDispatch, useTheme];\n});\n_c = MultipleSelectPlaceholder;\nvar _c;\n$RefreshReg$(_c, \"MultipleSelectPlaceholder\");","map":{"version":3,"names":["React","useEffect","useState","useTheme","OutlinedInput","MenuItem","FormControl","Select","axios","useDispatch","productArray","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelectPlaceholder","props","_s","dispatch","setPersonName","names","handleChange","event","target","value","split","data","setData","console","log","fetchData","response2","get","then","response","products","error","filterProductsByCategory","selectedCategory","filteredProducts","filter","product","brand","length","children","sx","m","mt","single","displayEmpty","onChange","input","fileName","_jsxFileName","lineNumber","columnNumber","renderValue","selected","join","inputProps","disabled","map","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Desktop/OffCampus1/K Rite innovation/frontend/src/Component/Screen/Filters/BrandInput.js"],"sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { productArray } from '../../../action';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelectPlaceholder(props) {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n// console.log(props.names)\r\nconst names=props.names\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n\r\nconsole.log(personName)\r\n  useEffect(()=>{\r\n    \r\n    const fetchData=()=>{\r\n        try {\r\n            const response2= axios.get(\"https://dummyjson.com/products?skip=1&limit=100\").then(response => {\r\n                // Access the data from the response\r\n                const data = response.data;\r\n          \r\n                // Now you can work with the data\r\n                console.log(data);\r\n          \r\n                // Return the data if needed\r\n                   setData([...data.products])\r\n                return data.products;\r\n              })\r\n            //   setData2([...response2])\r\n            // console.log(data2)\r\n      } catch (error) {\r\n          console.log(\"error in fetching data\")\r\n      }\r\n    }\r\n   fetchData();\r\n\r\n\r\n  },[])\r\n    \r\n\r\n\r\n  function filterProductsByCategory(products, selectedCategory) {\r\n    // Use Array.filter to filter products based on the selected category\r\n    const filteredProducts = products.filter(product => product.brand === selectedCategory);\r\n    // console.log(products)\r\n\r\n\r\n    // console.log(selectedCategory)\r\n    \r\n    // console.log(filteredProducts)\r\n    if(selectedCategory===\"undefined\"){\r\n      return products\r\n    }else {\r\n      return filteredProducts;\r\n    }\r\n    \r\n  }\r\n  var filteredProducts  \r\nif(personName.length===0){\r\n  filteredProducts =data;\r\n}else {\r\n  filteredProducts = filterProductsByCategory(data, personName[0]);\r\n}\r\n\r\n  // console.log(filteredProducts);\r\n  dispatch(productArray(filteredProducts))\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, width: 350, mt: 3 }}>\r\n        <Select\r\n          single\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em></em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}\r\n            >\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,gBAAgB,GAAG,CAAC;AAC1B,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE;IACVC,KAAK,EAAE;MACLC,SAAS,EAAEL,WAAW,GAAG,GAAG,GAAGC,gBAAgB;MAC/CK,KAAK,EAAE;IACT;EACF;AACF,CAAC;AAED,SAASC,SAASA,CAACC,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAE;EAC1C,OAAO;IACLC,UAAU,EACRF,UAAU,CAACG,OAAO,CAACJ,IAAI,CAAC,KAAK,CAAC,CAAC,GAC3BE,KAAK,CAACG,UAAU,CAACC,iBAAiB,GAClCJ,KAAK,CAACG,UAAU,CAACE;EACzB,CAAC;AACH;AAEA,eAAe,SAASC,yBAAyBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvD,MAAMC,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9B,MAAMc,KAAK,GAAGpB,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACmB,UAAU,EAAEW,aAAa,CAAC,GAAGjC,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC;EACxD;EACA,MAAMgC,KAAK,GAACJ,KAAK,CAACI,KAAK;EACrB,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAM;IAClB,CAAC,GAAGF,KAAK;IACTH,aAAa;IACX;IACA,OAAOK,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,GAAGD,KACjD,CAAC;EACH,CAAC;EAED,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAEtCwC,OAAO,CAACC,GAAG,CAACrB,UAAU,CAAC;EACrBrB,SAAS,CAAC,MAAI;IAEZ,MAAM2C,SAAS,GAACA,CAAA,KAAI;MAChB,IAAI;QACA,MAAMC,SAAS,GAAErC,KAAK,CAACsC,GAAG,CAAC,iDAAiD,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;UAC3F;UACA,MAAMR,IAAI,GAAGQ,QAAQ,CAACR,IAAI;;UAE1B;UACAE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;;UAEjB;UACGC,OAAO,CAAC,CAAC,GAAGD,IAAI,CAACS,QAAQ,CAAC,CAAC;UAC9B,OAAOT,IAAI,CAACS,QAAQ;QACtB,CAAC,CAAC;QACJ;QACA;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACF,CAAC;IACFC,SAAS,CAAC,CAAC;EAGZ,CAAC,EAAC,EAAE,CAAC;EAIL,SAASO,wBAAwBA,CAACF,QAAQ,EAAEG,gBAAgB,EAAE;IAC5D;IACA,MAAMC,gBAAgB,GAAGJ,QAAQ,CAACK,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,KAAK,KAAKJ,gBAAgB,CAAC;IACvF;;IAGA;;IAEA;IACA,IAAGA,gBAAgB,KAAG,WAAW,EAAC;MAChC,OAAOH,QAAQ;IACjB,CAAC,MAAK;MACJ,OAAOI,gBAAgB;IACzB;EAEF;EACA,IAAIA,gBAAgB;EACtB,IAAG/B,UAAU,CAACmC,MAAM,KAAG,CAAC,EAAC;IACvBJ,gBAAgB,GAAEb,IAAI;EACxB,CAAC,MAAK;IACJa,gBAAgB,GAAGF,wBAAwB,CAACX,IAAI,EAAElB,UAAU,CAAC,CAAC,CAAC,CAAC;EAClE;;EAEE;EACAU,QAAQ,CAACtB,YAAY,CAAC2C,gBAAgB,CAAC,CAAC;EAExC,oBACEzC,OAAA;IAAA8C,QAAA,eACE9C,OAAA,CAACN,WAAW;MAACqD,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEzC,KAAK,EAAE,GAAG;QAAE0C,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,eAC3C9C,OAAA,CAACL,MAAM;QACLuD,MAAM;QACNC,YAAY;QACZzB,KAAK,EAAEhB,UAAW;QAClB0C,QAAQ,EAAE7B,YAAa;QACvB8B,KAAK,eAAErD,OAAA,CAACR,aAAa;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACzBC,WAAW,EAAGC,QAAQ,IAAK;UACzB,IAAIA,QAAQ,CAACd,MAAM,KAAK,CAAC,EAAE;YACzB,oBAAO7C,OAAA;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAClB;UAEA,OAAOE,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAE;QACFzD,SAAS,EAAEA,SAAU;QACrB0D,UAAU,EAAE;UAAE,YAAY,EAAE;QAAgB,CAAE;QAAAf,QAAA,gBAE9C9C,OAAA,CAACP,QAAQ;UAACqE,QAAQ;UAACpC,KAAK,EAAC,EAAE;UAAAoB,QAAA,eACzB9C,OAAA;YAAA8C,QAAA,EAAI;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,EACVnC,KAAK,CAACyC,GAAG,CAAEtD,IAAI,iBACdT,OAAA,CAACP,QAAQ;UAEPiC,KAAK,EAAEjB,IAAK;UACZJ,KAAK,EAAEG,SAAS,CAACC,IAAI,EAAEC,UAAU,EAAEC,KAAK,CAAE;UAAAmC,QAAA,EAEzCrC;QAAI,GAJAA,IAAI;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKD,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACtC,EAAA,CA5GuBF,yBAAyB;EAAA,QAC9BpB,WAAW,EACdN,QAAQ;AAAA;AAAAyE,EAAA,GAFA/C,yBAAyB;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}